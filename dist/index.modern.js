import{useOpenCv as t,OpenCvProvider as e}from"opencv-react";import o,{useCallback as r,useRef as i,useEffect as n,useState as l,useImperativeHandle as a,Fragment as c}from"react";import h from"react-draggable";const s=(t,e,o)=>({width:t,height:t,backgroundColor:e,border:o,borderRadius:"100%",position:"absolute",zIndex:1001,cursor:"pointer"}),d=({cropPoints:t,pointArea:e,defaultPosition:i,pointSize:n,pointBgColor:l="transparent",pointBorder:a="4px solid #3cabe2",onStop:c,onDrag:d,bounds:p})=>{const m=r((o,r)=>{d({...r,x:r.x+n/2,y:r.y+n/2},e,t)},[d]),u=r((o,r)=>{c({...r,x:r.x+n/2,y:r.y+n/2},e,t)},[d,t]);return o.createElement(h,{bounds:p,defaultPosition:i,position:{x:t[e].x-n/2,y:t[e].y-n/2},onDrag:m,onStop:u,axis:"top"===e||"bottom"===e?"y":"left"===e||"right"===e?"x":"both"},o.createElement("div",{style:["top","bottom","left","right"].includes(e)?(g=n,y=l,x=a,f="left"===e||"right"===e,{width:f?g/2:g,height:f?g:g/2,backgroundColor:y,border:x,marginTop:f?void 0:g/4,marginLeft:f?g/4:void 0,position:"absolute",zIndex:1001,cursor:"pointer"}):s(n,l,a)}));var g,y,x,f},p=t=>{const{previewDims:e,...r}=t;return o.createElement(o.Fragment,null,o.createElement(d,Object.assign({pointArea:"top",defaultPosition:{x:0,y:0}},r)),o.createElement(d,Object.assign({pointArea:"right",defaultPosition:{x:e.width,y:0}},r)),o.createElement(d,Object.assign({pointArea:"bottom",defaultPosition:{x:0,y:e.height}},r)),o.createElement(d,Object.assign({pointArea:"left",defaultPosition:{x:e.width,y:e.height}},r)),o.createElement(d,Object.assign({pointArea:"left-top",defaultPosition:{x:0,y:0}},r)),o.createElement(d,Object.assign({pointArea:"right-top",defaultPosition:{x:e.width,y:0}},r)),o.createElement(d,Object.assign({pointArea:"right-bottom",defaultPosition:{x:0,y:e.height}},r)),o.createElement(d,Object.assign({pointArea:"left-bottom",defaultPosition:{x:e.width,y:e.height}},r)))},m=({cropPoints:t,previewDims:e,lineWidth:l=3,lineColor:a="#3cabe2",pointSize:c,displayGrid:h=!0})=>{const s=i(null),d=r(()=>{var t;const o=null===(t=s.current)||void 0===t?void 0:t.getContext("2d",{alpha:!0,willReadFrequently:!0});null==o||o.clearRect(0,0,e.width,e.height)},[s.current,e]),p=r(()=>{var e;const{"left-top":o,"right-top":r,"right-bottom":i,"left-bottom":n,left:d,top:p,right:m,bottom:u}=t,g=null===(e=s.current)||void 0===e?void 0:e.getContext("2d",{alpha:!0,willReadFrequently:!0});if(!g)return;g.lineWidth=l,g.strokeStyle=a;const y=c/2;g.beginPath(),g.moveTo(o.x+y,o.y),g.lineTo(r.x-y,r.y),g.moveTo(r.x,r.y+y),g.lineTo(i.x,i.y-y),g.moveTo(i.x-y,i.y),g.lineTo(n.x+y,n.y),g.moveTo(n.x,n.y-y),g.lineTo(o.x,o.y+y),g.closePath(),g.stroke(),g.clearRect(p.x-y,p.y-y,c,c),g.clearRect(m.x-y,m.y-y,c,c),g.clearRect(u.x-y,u.y-y,c,c),g.clearRect(d.x-y,d.y-y,c,c),h&&(g.lineWidth=l/2,g.beginPath(),g.moveTo(o.x-y,o.y),g.lineTo(o.x+y,o.y),g.moveTo(o.x,o.y+y),g.lineTo(o.x,o.y-y),g.moveTo(r.x-y,r.y),g.lineTo(r.x+y,r.y),g.moveTo(r.x,r.y+y),g.lineTo(r.x,r.y-y),g.moveTo(i.x-y,i.y),g.lineTo(i.x+y,i.y),g.moveTo(i.x,i.y+y),g.lineTo(i.x,i.y-y),g.moveTo(n.x-y,n.y),g.lineTo(n.x+y,n.y),g.moveTo(n.x,n.y+y),g.lineTo(n.x,n.y-y),g.closePath(),g.stroke())},[t,s.current]);return n(()=>{t&&s.current&&(d(),p())},[t,s.current]),o.createElement("canvas",{ref:s,style:{position:"absolute",zIndex:5},width:e.width,height:e.height})};function u(t,e){return{x:(t.x+e.x)/2,y:(t.y+e.y)/2}}const g=t=>({width:t.width,height:t.height});let y=0;const x=({image:e,onDragStop:h,onChange:s,cropperRef:d,pointSize:x=30,lineWidth:f,pointBgColor:b,pointBorder:w,lineColor:v,maxWidth:E,maxHeight:T,displayGrid:R})=>{const{loaded:C,cv:A}=t(),P=i(),O=i(null),S=i(null),[_,B]=l(),[z,I]=l(),[F,M]=l(!1),[D,H]=l("crop"),L=()=>{if(!P.current)return;const t=((t,e,o,r)=>{const i=t/e,n=o||window.innerWidth,l=r||window.innerHeight,a={width:n,height:Math.round(n/i),ratio:i};return a.height>l&&(a.height=l,a.width=Math.round(l*i)),a})(P.current.width,P.current.height,E,T);B(t),O.current&&(O.current.width=t.width,O.current.height=t.height,y=t.width/P.current.width)},N=t=>{if(!A||!P.current||!O.current)return;const e=t||A.imread(P.current),o=new A.Mat,r=new A.Size(0,0);A.resize(e,o,r,y,y,A.INTER_AREA),A.imshow(O.current,o),e.delete(),o.delete()},j=()=>{if(!A||!P.current)return;const t=A.imread(P.current),e=new A.Size(5,5);A.cvtColor(t,t,A.COLOR_RGBA2GRAY,0),A.GaussianBlur(t,t,e,0,0,A.BORDER_DEFAULT),A.Canny(t,t,75,200),A.threshold(t,t,120,200,A.THRESH_BINARY);const o=new A.MatVector,r=new A.Mat;A.findContours(t,o,r,A.RETR_CCOMP,A.CHAIN_APPROX_SIMPLE);const i=A.boundingRect(t);t.delete(),r.delete(),o.delete(),Object.keys(i).forEach(t=>{i[t]*=y}),I({top:{x:i.x+i.width/2,y:i.y},bottom:{x:i.x+i.width/2,y:i.y+i.height},left:{x:i.x,y:i.y+i.height/2},right:{x:i.x+i.width,y:i.y+i.height/2},"left-top":{x:i.x,y:i.y},"right-top":{x:i.x+i.width,y:i.y},"right-bottom":{x:i.x+i.width,y:i.y+i.height},"left-bottom":{x:i.x,y:i.y+i.height}})};a(d,()=>({backToCrop:()=>{H("crop")},mirror:t=>{A&&P.current&&(((t,e,o)=>{const r=t.imread(e);t.flip(r,r,o?1:0),t.imshow(e,r),r.delete()})(A,P.current,t),L(),N(),j())},rotate:t=>{A&&P.current&&(((t,e,o)=>{const r=t.imread(e),i={90:t.ROTATE_90_CLOCKWISE,180:t.ROTATE_180,270:t.ROTATE_90_COUNTERCLOCKWISE};if(void 0!==i[o]&&(t.rotate(r,r,i[o]),90===o||270===o)){const{width:t,height:o}=e;e.width=o,e.height=t}t.imshow(e,r),r.delete()})(A,P.current,t),L(),N(),j())},done:async(t={})=>new Promise((o,r)=>{M(!0),A&&P.current&&z?(((t,e,o,r,i)=>{const n=t.imread(e),l=o["right-bottom"],a=o["left-bottom"],c=o["right-top"],h=o["left-top"],s=[h,c,l,a].map(t=>[t.x/r,t.y/r]),d=Math.max(l.x-a.x,c.x-h.x)/r,p=Math.max(a.y-h.y,l.y-c.y)/r,m=[[0,0],[d-1,0],[d-1,p-1],[0,p-1]],u=t.matFromArray(4,1,t.CV_32FC2,[].concat(...s)),g=t.matFromArray(4,1,t.CV_32FC2,[].concat(...m)),y=t.getPerspectiveTransform(u,g),x=new t.Size(d,p);t.warpPerspective(n,n,y,x,t.INTER_LINEAR,t.BORDER_CONSTANT,new t.Scalar),t.imshow(e,n),n.delete(),u.delete(),g.delete(),y.delete(),i()})(A,P.current,z,y,L),((t,e,o)=>{const r={blur:!1,th:!1,thMode:t.ADAPTIVE_THRESH_MEAN_C,thMeanCorrection:15,thBlockSize:25,thMax:255,grayScale:!1,...o},i=t.imread(e);if(r.grayScale&&t.cvtColor(i,i,t.COLOR_RGBA2GRAY,0),r.blur){const e=new t.Size(5,5);t.GaussianBlur(i,i,e,0,0,t.BORDER_DEFAULT)}r.th&&(r.grayScale?t.adaptiveThreshold(i,i,r.thMax,r.thMode,t.THRESH_BINARY,r.thBlockSize,r.thMeanCorrection):(i.convertTo(i,-1,1,60),t.threshold(i,i,170,255,t.THRESH_BINARY))),t.imshow(e,i),i.delete()})(A,P.current,t.filterCvParams),t.preview&&H("preview"),P.current.toBlob(t=>{t?o(t):r(new Error("Failed to create blob")),M(!1)},e instanceof File?e.type:"image/png")):r(new Error("OpenCV not loaded or canvas not initialized"))})})),n(()=>{"preview"===D&&N()},[D]);const W=()=>{if(!S.current)return;const t=S.current.getContext("2d",{alpha:!0,willReadFrequently:!0});null==t||t.clearRect(0,0,S.current.width,S.current.height)};n(()=>{null==s||s({...z,loading:F})},[z,F]),n(()=>{e&&O.current&&C&&"crop"===D?(async()=>{const t=await(o=e,o instanceof File?new Promise((t,e)=>{const r=new FileReader;r.onload=e=>{t(r.result)},r.onerror=t=>{e(t)},r.readAsDataURL(o)}):Promise.resolve("string"==typeof o?o:null));var o;t&&(await(async t=>new Promise(e=>{const o=document.createElement("img");o.onload=async()=>{P.current=document.createElement("canvas"),P.current.width=o.width,P.current.height=o.height;const t=P.current.getContext("2d",{alpha:!0,willReadFrequently:!0});null==t||t.drawImage(o,0,0),L(),e()},function(t){const{location:e}=window,o=t.match(/^(\w+:)\/\/([^:/?#]*):?(\d*)/i);return null!==o&&(o[1]!==e.protocol||o[2]!==e.hostname||o[3]!==e.port)}(t)&&(o.crossOrigin="anonymous"),o.src=t}))(t),N(),j(),M(!1))})():M(!0)},[e,O.current,C,D]);const k=(t,e,o)=>{const{x:r,y:i}=t;if(e.includes("-"))o[e]={x:r,y:i},e.includes("left")&&(o.left=u(o["left-top"],o["left-bottom"])),e.includes("right")&&(o.right=u(o["right-top"],o["right-bottom"])),e.includes("top")&&(o.top=u(o["left-top"],o["right-top"])),e.includes("bottom")&&(o.bottom=u(o["left-bottom"],o["right-bottom"]));else{const t=r-o[e].x,n=i-o[e].y;"left"===e?(o["left-top"]={x:r,y:o["left-top"].y+n},o["left-bottom"]={x:r,y:o["left-bottom"].y+n},o.left=u(o["left-top"],o["left-bottom"]),o.top=u(o["left-top"],o["right-top"]),o.bottom=u(o["left-bottom"],o["right-bottom"])):"right"===e?(o["right-top"]={x:r,y:o["right-top"].y+n},o["right-bottom"]={x:r,y:o["right-bottom"].y+n},o.right=u(o["right-top"],o["right-bottom"]),o.top=u(o["left-top"],o["right-top"]),o.bottom=u(o["left-bottom"],o["right-bottom"])):"top"===e?(o["left-top"]={x:o["left-top"].x+t,y:i},o["right-top"]={x:o["right-top"].x+t,y:i},o.top=u(o["left-top"],o["right-top"]),o.left=u(o["left-top"],o["left-bottom"]),o.right=u(o["right-top"],o["right-bottom"])):"bottom"===e&&(o["left-bottom"]={x:o["left-bottom"].x+t,y:i},o["right-bottom"]={x:o["right-bottom"].x+t,y:i},o.bottom=u(o["left-bottom"],o["right-bottom"]),o.left=u(o["left-top"],o["left-bottom"]),o.right=u(o["right-top"],o["right-bottom"]))}I(t=>({...t,...o}))},G=r((t,e,o)=>{const{x:r,y:i}=t;if(W(),e.includes("-")){var n;const t=null===(n=S.current)||void 0===n?void 0:n.getContext("2d",{alpha:!0,willReadFrequently:!0});if(!O.current)return;null==t||t.drawImage(O.current,r-(x-10),i-(x-10),x+5,x+5,r+10,i-90,x+20,x+20)}k(t,e,o)},[]),q=r((t,e,o)=>{const{x:r,y:i}=t;W(),k(t,e,o),null==h||h({...o,[e]:{x:r,y:i}})},[]);return o.createElement("div",{style:{position:"relative",..._&&g(_)}},_&&"crop"===D&&z&&O.current&&o.createElement(c,null,o.createElement(p,{pointSize:x,pointBgColor:b,pointBorder:w,cropPoints:z,previewDims:_,onDrag:G,onStop:q,bounds:{left:O.current.offsetLeft-x/2,top:O.current.offsetTop-x/2,right:O.current.offsetLeft-x/2+O.current.offsetWidth,bottom:O.current.offsetTop-x/2+O.current.offsetHeight}}),o.createElement(m,{displayGrid:R,previewDims:_,cropPoints:z,lineWidth:f,lineColor:v,pointSize:x}),o.createElement("canvas",{style:{position:"absolute",zIndex:5,pointerEvents:"none"},width:_.width,height:_.height,ref:S})),o.createElement("canvas",{style:{zIndex:5,pointerEvents:"none"},ref:O}))},f=o.forwardRef((t,r)=>t.image?o.createElement(e,{openCvPath:t.openCvPath},o.createElement(x,Object.assign({},t,{cropperRef:r}))):null);export default f;
//# sourceMappingURL=index.modern.js.map
